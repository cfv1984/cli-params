{"version":3,"file":"index.umd.js","sources":["../src/params/isProcessArgv.js","../src/params/parsers/full_flag.js","../src/params/parsers/short_flag.js","../src/params/parsers/positional.js","../src/params/index.js"],"sourcesContent":["function isProcessArgv(obj) {\r\n  return obj === process.argv;\r\n}\r\n\r\nexport default isProcessArgv;\r\n","const FULL_FLAG = {\r\n  canParse(str) {\r\n    return str.startsWith(\"--\");\r\n  },\r\n  parse(str, _) {\r\n    let [name, value] = str.slice(2).split(\"=\");\r\n    if(!value){\r\n      value === true;\r\n    }\r\n    return { name, value };\r\n  },\r\n};\r\n\r\nexport default FULL_FLAG;","import FULL_FLAG from \"./full_flag\";\r\n\r\nconst SHORT_FLAG = {\r\n  canParse(str) {\r\n    return !FULL_FLAG.canParse(str) && str.startsWith(\"-\");\r\n  },\r\n  parse(str, _) {\r\n    let [name, value] = str.slice(1).split(\"=\");\r\n    if (typeof value === \"undefined\") {\r\n      value = true;\r\n    }\r\n    if ([\"true\", \"false\"].includes(value)) {\r\n      value = value === \"true\";\r\n    }\r\n\r\n    return { name, value };\r\n  },\r\n};\r\n\r\nexport default SHORT_FLAG;\r\n","import FULL_FLAG from \"./full_flag\";\r\nimport SHORT_FLAG from \"./short_flag\";\r\n\r\nconst POSITIONAL = {\r\n  canParse(str) {\r\n    return !SHORT_FLAG.canParse(str) && !FULL_FLAG.canParse(str);\r\n  },\r\n  parse(str, all) {\r\n    const name = all.indexOf(str);\r\n    const value = str;\r\n    return { name, value };\r\n  },\r\n};\r\n\r\nexport default POSITIONAL;;\r\n","import isProcessArgv from \"./isProcessArgv\";\r\nimport { SHORT_FLAG, FULL_FLAG, POSITIONAL } from \"./parsers\";\r\n\r\nfunction params(args = process.argv, aliases = {}) {\r\n  if (!args instanceof Array) {\r\n    throw new Error(\"Bad input, expecting an array of cli parameters\");\r\n  }\r\n  const RAW = Symbol(\"raw\");\r\n  const PARSERS = [SHORT_FLAG, FULL_FLAG, POSITIONAL];\r\n  let params = {\r\n    [RAW]: {\r\n      list: args,\r\n    },\r\n  };\r\n\r\n  if (isProcessArgv(args)) {\r\n    params = {\r\n      [RAW]: {\r\n        file: args[1],\r\n        list: args.slice(2),\r\n      },\r\n    };\r\n  }\r\n\r\n  params.positional = [];\r\n  params.RAW = RAW;\r\n  const { list } = params[RAW];\r\n\r\n  list.forEach((arg) => {\r\n    const parser = PARSERS.filter((p) => p.canParse(arg)).pop();\r\n    if (typeof parser !== \"undefined\") {\r\n      const { name, value } = parser.parse(arg, list);\r\n      if (name === Number(name)) {\r\n        params.positional[name] = value;\r\n      } else {\r\n        params[name] = value;\r\n      }\r\n    }\r\n  });\r\n\r\n  Object.keys(aliases).forEach((newKey) => {\r\n    const oldKey = aliases[newKey];\r\n    const value = params[oldKey];\r\n    if (typeof value === \"undefined\") {\r\n      return;\r\n    }\r\n    delete params[oldKey];\r\n    params = {\r\n      ...params,\r\n      [newKey]: value,\r\n    };\r\n  });\r\n\r\n  return params;\r\n}\r\n\r\nexport default params;\r\n"],"names":["isProcessArgv","obj","process","argv","FULL_FLAG","canParse","str","startsWith","parse","_","slice","split","name","value","SHORT_FLAG","includes","POSITIONAL","all","indexOf","params","args","aliases","Array","Error","RAW","Symbol","PARSERS","list","file","positional","forEach","arg","parser","filter","p","pop","Number","Object","keys","newKey","oldKey"],"mappings":"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"}